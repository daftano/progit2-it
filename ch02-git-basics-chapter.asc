[[ch02-git-basics-chapter]]
////
== Git Basics
////

== Basi di Git 

////
If you can read only one chapter to get going with Git, this is it.
This chapter covers every basic command you need to do the vast majority of the things you'll eventually spend your time doing with Git.
By the end of the chapter, you should be able to configure and initialize a repository, begin and stop tracking files, and stage and commit changes.
We'll also show you how to set up Git to ignore certain files and file patterns, how to undo mistakes quickly and easily, how to browse the history of your project and view changes between commits, and how to push and pull from remote repositories.
////

Se puoi leggere un solo capitolo per imparare Git, leggi questo.
Questo capitolo illustra tutti i comandi base di cui hai bisogno per la stragrande maggioranza delle cose che farai con Git.
Alla fine del capitolo sarai in grado di configurare e creare un repository, iniziare e interrompere il tracciamento dei file e mettere in stage e committare le modifiche.
Vedremo come impostare Git per ignorare certi file o pattern, come annullare velocemente e facilmente gli errori, come navigare la cronologia del tuo progetto e vedere le modifiche tra le varie commit e come fare il push ed il pull da repository remoti.

include::book/02-git-basics/sections/getting-a-repository.asc[]

include::book/02-git-basics/sections/recording-changes.asc[]

include::book/02-git-basics/sections/viewing-history.asc[]

include::book/02-git-basics/sections/undoing.asc[]

include::book/02-git-basics/sections/remotes.asc[]

include::book/02-git-basics/sections/tagging.asc[]

include::book/02-git-basics/sections/aliases.asc[]

////
=== Summary
////

=== Sommario

////
At this point, you can do all the basic local Git operations -- creating or cloning a repository, making changes, staging and committing those changes, and viewing the history of all the changes the repository has been through.
Next, we'll cover Git's killer feature: its branching model.
////

A questo punto, sei in grado di eseguire tutte le operazioni di base di Git in locale: creare o clonare un repository, fare delle modifiche, mettere nello `stage` e inviare queste modifiche, vedere la cronologia delle modifiche fatte al repository.
Nel prossimo capitolo, vedremo la caratteristica vincente di Git: il suo modello di ramificazione.

