////
=== Installing Git
////

=== Installare Git

////
Before you start using Git, you have to make it available on your computer.
Even if it's already installed, it's probably a good idea to update to the latest version.
You can either install it as a package or via another installer, or download the source code and compile it yourself.

[NOTE]
====
This book was written using Git version *2.8.0*.
Though most of the commands we use should work even in ancient versions of Git, some of them might not or might act slightly differently if you're using an older version.
Since Git is quite excellent at preserving backwards compatibility, any version after 2.0 should work just fine.
====
////

Prima di iniziare ad utilizzare Git, devi renderlo disponibile sul tuo computer.
Anche se è già installato, probabilmente è una buona idea aggiornarlo all'ultima versione.
Puoi installarlo sia come un pacchetto o tramite altro installatore, sia scaricando il codice sorgente e compilandolo autonomamente.

[NOTE]
====
Questo libro è stato scritto utilizzando Git versione *2.8.0*.
Tuttavia la maggior parte dei comandi utilizzati dovrebbe funzionare anche nelle versioni vecchie di Git, alcuni di questi potrebbero o meno agire in modo leggermente diverso se utilizzi una versione precedente.
Poiché Git è davvero eccezionale nel mantenere la retro-compatibilità, tutte le versioni dopo la 2.0 dovrebbero funzionare bene.
====
 
////
==== Installing on Linux
////

==== Installare su Linux 

////
(((Linux, installing)))
If you want to install the basic Git tools on Linux via a binary installer, you can generally do so through the package management tool that comes with your distribution.
If you're on Fedora (or any closely-related RPM-based distribution, such as RHEL or CentOS), you can use `dnf`:

[source,console]
----
$ sudo dnf install git-all
----

If you're on a Debian-based distribution, such as Ubuntu, try `apt`:

[source,console]
----
$ sudo apt install git-all
----

For more options, there are instructions for installing on several different Unix distributions on the Git website, at https://git-scm.com/download/linux[].
////


(((Linux, installing)))
Se vuoi installare gli strumenti base di Git su Linux, tramite una installazione da binario, generalmente puoi farlo con lo strumento base di amministrazione dei pacchetti della tua distribuzione.
Se usi Fedora (o qualsiasi distribuzione strettamente correlata su base RPM, come RHEL o CentOS), puoi usare `dnf`:

[source,console]
----
$ sudo dnf install git-all
----

Se usi una distribuzione basata su Debian, come Ubuntu, prova `apt`:

[source,console]
----
$ sudo apt install git-all
----

Per maggiori opzioni, le istruzioni per l'installazione su molte distribuzioni Unix differenti sono sul sito web di Git all'indirizzo https://git-scm.com/download/linux[].


////
==== Installing on macOS

(((macOS, installing)))
There are several ways to install Git on a Mac.
The easiest is probably to install the Xcode Command Line Tools.(((Xcode)))
On Mavericks (10.9) or above you can do this simply by trying to run 'git' from the Terminal the very first time.

[source,console]
----
$ git --version
----

If you don't have it installed already, it will prompt you to install it.

If you want a more up to date version, you can also install it via a binary installer.
A macOS Git installer is maintained and available for download at the Git website, at https://git-scm.com/download/mac[].

.Git macOS Installer.
image::images/git-osx-installer.png[Git macOS installer.]

You can also install it as part of the GitHub for macOS install.
Their GUI Git tool has an option to install command line tools as well.
You can download that tool from the GitHub for macOS website, at https://desktop.github.com[].
////

==== Installare su macOS

(((macOS, installing)))
Ci sono molti modi di installare Git su un Mac.
Il più semplice è probabilmente quello di installare l'Xcode Command Line Tools.(((Xcode)))
Su Mavericks (10.9), o versioni seguenti, puoi farlo semplicemente provando a far funzionare 'git' da terminale la prima volta in assoluto.

[source,console]
----
$ git --version
----

Se non è già installato, ti verrà richiesto di installarlo.

Se desideri una versione più aggiornata, puoi anche installarlo tramite un installatore binario.
Un installatore di Git per macOS è mantenuto e reso disponibile per il download sul sito web di Git, all'indirizzo https://git-scm.com/download/mac[].

.Installatore di Git per macOS.
image::images/git-osx-installer.png[Installatore di Git per macOS.]

Puoi anche installarlo come parte dell'installazione di GitHub per macOS.
La loro interfaccia grafica di Git ha una opzione per installare anche gli strumenti da riga di comando.
Puoi scaricare questo strumento dal sito web di GitHub per macOS, all'indirizzo https://desktop.github.com[].

////
==== Installing on Windows

There are also a few ways to install Git on Windows.(((Windows, installing)))
The most official build is available for download on the Git website.
Just go to https://git-scm.com/download/win[] and the download will start automatically.
Note that this is a project called Git for Windows, which is separate from Git itself; for more information on it, go to https://gitforwindows.org[].

To get an automated installation you can use the https://chocolatey.org/packages/git[Git Chocolatey package].
Note that the Chocolatey package is community maintained.

Another easy way to get Git installed is by installing GitHub Desktop.
The installer includes a command line version of Git as well as the GUI.
It also works well with PowerShell, and sets up solid credential caching and sane CRLF settings.(((PowerShell)))(((CRLF)))(((credential caching)))
We'll learn more about those things a little later, but suffice it to say they're things you want.
You can download this from the https://desktop.github.com[GitHub Desktop website].
////

==== Installare su Windows

C'é anche qualche modo di installare Git su Windows.(((Windows, installing)))
La versione più ufficiale é disponibile per il download sul sito web di Git.
E' sufficiente visitare https://git-scm.com/download/win[] ed il download partirà automaticamente.
Si noti che questo é un progetto chiamato Git for Windows, che è separato da Git stesso; per maggiori informazioni sul progetto si veda https://gitforwindows.org[].

Per ottenere una installazione automatica si può utilizzare https://chocolatey.org/packages/git[Git Chocolatey package].
Si noti che il package Chocolatey é mantenuto dalla comunità. 

Un altro modo semplice per ottenere Git installato è quello di installare il Desktop di GitHub.
L'installatore include la versione a linea di comando così come la GUI.
Questa versione funziona bene anche con PowerShell, imposta un consistente sistema di memorizzazione delle credenziali in cache e una configurazione CRLF sensata.(((PowerShell)))(((CRLF)))(((credential caching)))
Su queste cose impareremo di più un po' più tardi, ma basti dire che sono le cose che servono.
Si può scaricare questa versione dal https://desktop.github.com[Sito web GitHub Desktop].

////
==== Installing from Source

Some people may instead find it useful to install Git from source, because you'll get the most recent version.
The binary installers tend to be a bit behind, though as Git has matured in recent years, this has made less of a difference.

If you do want to install Git from source, you need to have the following libraries that Git depends on: autotools, curl, zlib, openssl, expat, and libiconv.
For example, if you're on a system that has `dnf` (such as Fedora) or `apt-get` (such as a Debian-based system), you can use one of these commands to install the minimal dependencies for compiling and installing the Git binaries:
////

==== Installare da Sorgenti

Alcune persone potrebbero invece trovare utile installare Git dai sorgenti perché si avrà la versione più recente.
Anche se Git è maturato negli anni recenti, gli installatori binari tendono ad essere solo un po' indietro e questo ha fatto meno differenza.

Se vuoi installare Git dai sorgenti, hai bisogno delle librerie da cui dipende che sono: autotools, curl, zlib, openssl, expat e libiconv.
Per esempio, se sei su un sistema che usa `dnf` (come Fedora), o `apt-get` (come nei sistemi Debian), puoi usare uno dei seguenti comandi per installare le dipendenze minime per compilare ed installare i binari di Git:

[source,console]
----
$ sudo dnf install dh-autoreconf curl-devel expat-devel gettext-devel \
  openssl-devel perl-devel zlib-devel
$ sudo apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev \
  gettext libz-dev libssl-dev
----
////
In order to be able to add the documentation in various formats (doc, html, info), these additional dependencies are required (Note: users of RHEL and RHEL-derivatives like CentOS and Scientific Linux will have to https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F[enable the EPEL repository] to download the `docbook2X` package):
////

Al fine di essere in grado di aggiungere la documentazione in vari formati (doc, html, info) sono richieste queste ulteriori dipendenze (Nota: gli utenti di RHEL e derivate, come CentOS e Scientific Linux, dovranno https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F[abilitare il repository EPEL] per scaricare il pacchetto `docbook2X`):

[source,console]
----
$ sudo dnf install asciidoc xmlto docbook2X
$ sudo apt-get install asciidoc xmlto docbook2x
----

////
If you're using a Debian-based distribution (Debian/Ubuntu/Ubuntu-derivatives), you also need the `install-info` package:
////

Se stai utilizzando una distribuzione basata su Debian (Debian/Ubuntu/derivate di Ubuntu) ti serve anche il pacchetto `install-info`:

[source,console]
----
$ sudo apt-get install install-info
----

////
If you're using a RPM-based distribution (Fedora/RHEL/RHEL-derivatives), you also need the `getopt` package (which is already installed on a Debian-based distro):
////

Se stai utilizzando una distribuzione basata su RPM (Fedora/RHEL/derivate di RHEL) ti serve anche il pacchetto `getopt` (che è già installato in una distro a base Debian):

[source,console]
----
$ sudo dnf install getopt
$ sudo apt-get install getopt
----

////
Additionally, if you're using Fedora/RHEL/RHEL-derivatives, you need to do this
////

In aggiunta, se stai utilizzando Fedora/RHEL/derivate di RHEL hai bisogno di dare questo comando

[source,console]
----
$ sudo ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi
----

////
due to binary name differences.
////

a causa delle differenze nel nome del binario.

////
When you have all the necessary dependencies, you can go ahead and grab the latest tagged release tarball from several places.
You can get it via the kernel.org site, at https://www.kernel.org/pub/software/scm/git[], or the mirror on the GitHub website, at https://github.com/git/git/releases[].
It's generally a little clearer what the latest version is on the GitHub page, but the kernel.org page also has release signatures if you want to verify your download.

Then, compile and install:
////

Quando avrai tutte le dipendenze necessarie, puoi proseguire ed andare a recuperare l'archivio compresso (_tarball_) dell'ultima versione numerata da svariati posti.
Puoi ottenerlo tramite il sito kernel.org all'indirizzo https://www.kernel.org/pub/software/scm/git[] o dal mirror sul sito web di GitHub all'indirizzo https://github.com/git/git/releases[].
In genere è un po 'più chiaro quale sia l'ultima versione nella pagina GitHub, ma la pagina kernel.org ha anche le firme di rilascio se si desidera verificare il download.

Poi, compilalo ed installalo:

[source,console]
----
$ tar -zxf git-2.0.0.tar.gz
$ cd git-2.0.0
$ make configure
$ ./configure --prefix=/usr
$ make all doc info
$ sudo make install install-doc install-html install-info
----

////
After this is done, you can also get Git via Git itself for updates:
////

Dopo aver fatto questo, puoi scaricare gli aggiornamenti di Git con Git stesso :

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
----
