=== Git in Zsh

(((zsh)))(((tab completion, zsh)))(((shell prompts, zsh)))
Git comprende una libreria di auto-completamento, anche per Zsh.
Basta copiare `contrib/completion/git-completion.zsh` nella propria directory home e avviarla dal proprio `.zshrc`.
L'interfaccia di Zsh è migliore di quella di Bash:

[source,console]
----
$ git che<tab>
check-attr        -- display gitattributes information
check-ref-format  -- ensure that a reference name is well formed
checkout          -- checkout branch or paths to working tree
checkout-index    -- copy files from index to working directory
cherry            -- find commits not merged upstream
cherry-pick       -- apply changes introduced by some existing commits
----

I completamenti ambigui, non solo vengono elencati, comprendono delle utili descrizioni, e la lista è graficamente navigabili digitando ripetutamente il tasto tab.
Funziona con i comandi Git, i rispettivi argomenti, e i nomi e gli oggetti nei repository (come i ref ed i remote), nonché con i nomi dei file e tutte le altre cose che Zsh sa completare col tab.

Zsh sembra essere abbastanza simile a Bash per quanto riguarda la personalizzazione del prompt, ma consente anche di avere un prompt sul lato destro.
Per visualizzare il nome del branch a destra, si aggiungono queste righe al proprio file `~/.zshrc`:

[source,console]
----
setopt prompt_subst
. ~/git-prompt.sh
export RPROMPT=$'$(__git_ps1 "%s")'
----

Questo produce la visualizzazione del branch corrente sul lato destro della finestra del terminale, ogni qualvolta si è con una shell in un repository Git. Appare così:

.Prompt `zsh` personalizzato.
image::images/zsh-prompt.png[Customized `zsh` prompt.]

Zsh è tanto potente che esistono dei completi framework dedicati al suo miglioramento.
Uno di essi è "oh-my-zsh", e si trola all'indirizzo https://github.com/robbyrussell/oh-my-zsh[].
Il sistema di plugin di oh-my-zsh's è dotato di una potente funzione di auto-completamento Git, ed ha diversi "temi" di prompt, molti dei quali mostrano le informazioni sul controllo versione.
<<oh_my_zsh_git>> è solo un esempio di ciò che si può fare con questo sistema.

[[oh_my_zsh_git]]
.Un esempio di 'tema' di oh-my-zsh.
image::images/zsh-oh-my.png[An example of an oh-my-zsh theme.]
